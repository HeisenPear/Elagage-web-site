---
/**
 * Header avec navigation sticky moderne
 * - Transparent au chargement, devient opaque au scroll
 * - Menu burger minimaliste (toutes tailles écran)
 * - Overlay fullscreen avec animations stagger
 */
import { siteConfig, getPhoneLink } from '@/data/siteConfig';
import MobileMenu from '@/components/react/MobileMenu';

const navLinks = [
  { name: 'Accueil', href: '/' },
  { name: 'Services', href: '/#services' },
  { name: 'Galerie', href: '/galerie' },
  { name: 'Zones', href: '/zones' },
  { name: 'Contact', href: '/contact' },
];
---

<header
  id="header"
  class="fixed top-0 left-0 right-0 z-50 transition-all duration-500"
  data-header
>
  <div class="container-custom">
    <div class="flex items-center justify-between h-20 md:h-24">
      <!-- Logo -->
      <a
        href="/"
        class="flex items-center gap-3 text-white font-display font-bold text-xl md:text-2xl transition-all duration-500 group"
        aria-label="Retour à l'accueil"
        data-header-logo
      >
        <!-- Logo SVG (à remplacer par votre vrai logo) -->
        <div class="w-10 h-10 md:w-12 md:h-12 relative">
          <svg
            viewBox="0 0 48 48"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            class="w-full h-full transition-transform duration-300 group-hover:scale-110"
            aria-hidden="true"
          >
            <circle cx="24" cy="24" r="22" stroke="currentColor" stroke-width="2" />
            <path
              d="M24 8 L24 28 M18 20 L24 14 L30 20"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
            <path
              d="M16 32 Q20 28 24 32 T32 32"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              fill="none"
            />
          </svg>
        </div>
        <span class="hidden sm:inline">{siteConfig.business.name}</span>
      </a>

      <!-- Navigation desktop (cachée sur mobile) -->
      <nav class="hidden lg:flex items-center gap-8 transition-all duration-500" role="navigation" aria-label="Navigation principale" data-header-nav>
        {
          navLinks.map((link) => (
            <a
              href={link.href}
              class="text-white/90 hover:text-white font-medium transition-colors duration-300 relative group"
            >
              {link.name}
              <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-accent transition-all duration-300 group-hover:w-full" />
            </a>
          ))
        }
      </nav>

      <!-- CTA + Menu burger -->
      <div class="flex items-center gap-4">
        <!-- Bouton Appel (desktop) -->
        <a
          href={getPhoneLink()}
          class="hidden md:inline-flex items-center gap-2 px-6 py-3 bg-accent text-white font-semibold rounded-lg hover:bg-accent-hover hover:scale-105 transition-all duration-500 hover:shadow-glow focus-visible:ring-4 focus-visible:ring-accent/30"
          aria-label={`Appeler ${siteConfig.business.phoneDisplay}`}
          data-header-cta
        >
          <svg
            class="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
            />
          </svg>
          <span>{siteConfig.business.phoneDisplay}</span>
        </a>

        <!-- Menu burger (React component pour interactivité) -->
        <MobileMenu client:load navLinks={navLinks} />
      </div>
    </div>
  </div>
</header>

<script>
  /**
   * Script pour gérer le header minimaliste après le hero
   * - Affiche logo, nav et CTA dans le hero
   * - Cache tout sauf le menu burger après le hero
   * - Fond transparent → opaque avec backdrop blur
   */
  const header = document.querySelector('[data-header]') as HTMLElement;

  if (header) {
    const logo = document.querySelector('[data-header-logo]') as HTMLElement;
    const nav = document.querySelector('[data-header-nav]') as HTMLElement;
    const cta = document.querySelector('[data-header-cta]') as HTMLElement;

    // Détecte la hauteur du hero (section #hero)
    const heroSection = document.querySelector('#hero') as HTMLElement;
    const heroHeight = heroSection ? heroSection.offsetHeight : 800;

    const scrollThreshold = 50; // Pour le fond du header
    const heroThreshold = heroHeight - 100; // Marge de 100px avant la fin du hero

    const updateHeader = () => {
      const currentScroll = window.pageYOffset;
      const isDesktop = window.innerWidth >= 1024; // Breakpoint lg de Tailwind

      // Gestion du fond du header
      if (currentScroll > scrollThreshold) {
        header.classList.add('backdrop-glass', 'shadow-soft');
        header.classList.remove('bg-transparent');
      } else {
        header.classList.remove('backdrop-glass', 'shadow-soft');
        header.classList.add('bg-transparent');
      }

      // Gestion de l'affichage des éléments
      if (currentScroll > heroThreshold) {
        // Après le hero : cache logo et CTA
        if (logo) {
          logo.style.opacity = '0';
          logo.style.pointerEvents = 'none';
        }
        if (cta) {
          cta.style.opacity = '0';
          cta.style.pointerEvents = 'none';
        }
        // Sur desktop, garde la navigation visible
        if (nav && !isDesktop) {
          nav.style.opacity = '0';
          nav.style.pointerEvents = 'none';
        }
      } else {
        // Dans le hero : affiche tout
        if (logo) {
          logo.style.opacity = '1';
          logo.style.pointerEvents = 'auto';
        }
        if (cta) {
          cta.style.opacity = '1';
          cta.style.pointerEvents = 'auto';
        }
        if (nav) {
          nav.style.opacity = '1';
          nav.style.pointerEvents = 'auto';
        }
      }
    };

    // Throttle pour performance
    let ticking = false;
    window.addEventListener(
      'scroll',
      () => {
        if (!ticking) {
          window.requestAnimationFrame(() => {
            updateHeader();
            ticking = false;
          });
          ticking = true;
        }
      },
      { passive: true }
    );

    // Update sur resize (pour recalculer heroHeight)
    let resizeTimer: number;
    window.addEventListener('resize', () => {
      clearTimeout(resizeTimer);
      resizeTimer = setTimeout(() => {
        const newHeroHeight = heroSection ? heroSection.offsetHeight : 800;
        updateHeader();
      }, 100) as unknown as number;
    });

    // Init au chargement
    updateHeader();
  }
</script>

<style>
  /* Header avec transitions fluides pour changement de thème */
  #header {
    background: transparent;
    transition: background-color 0.4s ease, box-shadow 0.4s ease;
  }

  /* Logo avec transition de couleur */
  #header a[aria-label="Retour à l'accueil"] {
    transition: color 0.4s ease;
  }

  /* Logo SVG avec transition */
  #header svg {
    transition: color 0.4s ease;
  }

  /* Navigation links avec transition */
  #header nav a {
    transition: color 0.4s ease;
  }

  /* Smooth scroll anchor offset */
  :target {
    scroll-margin-top: 100px;
  }

  /* Animation subtile au changement de thème */
  @keyframes themeChange {
    0% {
      opacity: 0.95;
    }
    100% {
      opacity: 1;
    }
  }

  #header[data-theme] {
    animation: themeChange 0.3s ease-out;
  }

  /* Responsive mobile */
  @media (max-width: 640px) {
    /* Header plus compact sur mobile */
    #header {
      height: auto;
    }

    /* Logo plus petit sur mobile */
    #header [data-header-logo] {
      font-size: 1rem;
      gap: 0.5rem;
    }

    /* Container avec moins de padding sur mobile */
    #header .container-custom {
      padding-left: 16px;
      padding-right: 16px;
    }
  }

  /* Responsive tablette */
  @media (min-width: 641px) and (max-width: 1023px) {
    #header {
      height: auto;
    }
  }
</style>
