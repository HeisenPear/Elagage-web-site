---
/**
 * Layout de base pour toutes les pages
 * Inclut Header, Footer, SEO, et structure HTML de base
 */
import SEOHead from '@/components/SEOHead.astro';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import '@/styles/global.css';

interface Props {
  title?: string;
  description?: string;
  keywords?: string[];
  ogImage?: string;
  schema?: object | object[];
  noindex?: boolean;
}

const {
  title,
  description,
  keywords,
  ogImage,
  schema,
  noindex = false,
} = Astro.props;
---

<!doctype html>
<html lang="fr" class="scroll-smooth">
  <head>
    <SEOHead
      title={title}
      description={description}
      keywords={keywords}
      ogImage={ogImage}
      schema={schema}
      noindex={noindex}
    />
  </head>
  <body class="antialiased">
    <!-- Skip to content link pour accessibilité -->
    <a href="#main-content" class="skip-to-content">
      Aller au contenu principal
    </a>

    <!-- Header sticky -->
    <Header />

    <!-- Main content -->
    <main id="main-content" role="main">
      <slot />
    </main>

    <!-- Footer -->
    <Footer />

    <!-- Scroll natif fluide via CSS uniquement (pas de JS lourd) -->

    <!-- Animations au scroll simplifiées (Intersection Observer natif) -->
    <script>
      // Animation fade-in simple avec Intersection Observer (ultra performant)
      if ('IntersectionObserver' in window) {
        const observerOptions = {
          threshold: 0.1,
          rootMargin: '0px 0px -10% 0px'
        };

        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('is-visible');
              // Optionnel : arrêter d'observer après l'animation
              // observer.unobserve(entry.target);
            }
          });
        }, observerOptions);

        // Observer tous les éléments .animate-on-scroll
        document.addEventListener('DOMContentLoaded', () => {
          document.querySelectorAll('.animate-on-scroll').forEach(el => {
            observer.observe(el);
          });
        });
      } else {
        // Fallback : afficher directement sans animation
        document.addEventListener('DOMContentLoaded', () => {
          document.querySelectorAll('.animate-on-scroll').forEach(el => {
            el.classList.add('is-visible');
          });
        });
      }
    </script>

    <!-- Analytics (Google Analytics 4 - à personnaliser avec votre ID) -->
    <!-- <script async src="https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-XXXXXXXXXX');
    </script> -->
  </body>
</html>

<style is:global>
  /* Progress bar au top pour indiquer scroll progress */
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    height: 3px;
    background: linear-gradient(90deg, #7CB342, #0A2E1C);
    width: 0%;
    z-index: 9999;
    transition: width 0.1s ease-out;
  }

  /* Animation du progress bar via JS */
  @supports (animation-timeline: scroll()) {
    body::before {
      animation: scroll-progress linear;
      animation-timeline: scroll();
    }
  }

  @keyframes scroll-progress {
    to {
      width: 100%;
    }
  }
</style>
